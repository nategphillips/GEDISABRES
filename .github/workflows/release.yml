name: Build and release

on:
  push:
    tags:
      - "v*.*.*"

permissions:
  contents: write

jobs:
  build:
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        include:
          - os: macos-latest
            archive_ext: "macos.tar.gz"
          - os: ubuntu-latest
            archive_ext: "ubuntu.tar.gz"
          - os: windows-latest
            archive_ext: "windows.zip"

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version-file: ".python-version"

      - name: Install dependencies
        run: uv sync

      - name: Install PyInstaller
        run: uv add pyinstaller

      - name: Build executable with PyInstaller
        run: |
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            uv run pyinstaller --onefile --noconsole --name spectra --add-data "data;data" src/main.py
          else
            uv run pyinstaller --onefile --noconsole --name spectra --add-data "data:data" src/main.py
          fi
        shell: bash

      - name: Set environment variables
        run: |
          TAG_NAME=${{ github.ref_name }}
          REPO_NAME=$(basename $GITHUB_REPOSITORY) 
          ARCHIVE_NAME="${REPO_NAME}-${TAG_NAME}-${{ matrix.archive_ext }}" 

          echo "TAG_NAME=$TAG_NAME" >> $GITHUB_ENV
          echo "REPO_NAME=$REPO_NAME" >> $GITHUB_ENV
          echo "ARCHIVE_NAME=$ARCHIVE_NAME" >> $GITHUB_ENV
        shell: bash

      - name: Package release assets (Windows)
        run: |
          New-Item -ItemType Directory -Path release | Out-Null
          Copy-Item -Path dist\spectra.exe -Destination release\ -Force
          Copy-Item -Path data -Destination release\data -Recurse -Force
          Compress-Archive -Path release\* -DestinationPath release\$env:ARCHIVE_NAME -Force
        shell: pwsh
        if: runner.os == 'Windows'

      - name: Package release assets (Linux/macOS)
        run: |
          mkdir -p release
          cp dist/spectra release/
          cp -r data release/data
          tar -czvf $ARCHIVE_NAME -C release .
          mv $ARCHIVE_NAME release/
        shell: bash
        if: runner.os != 'Windows'

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARCHIVE_NAME }}
          path: release/${{ env.ARCHIVE_NAME }}

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: release_artifacts

      - name: Create GitHub release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref }}
          name: ${{ github.ref_name }}
          files: release_artifacts/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
